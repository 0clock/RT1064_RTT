#include "headfile.h"
#include "encoder.h"
#include "display.h"
#include "location.h"
#include "attitude_solution.h"
#include "imgproc.h"

enum Gui_Page Page_Number=InfoPage;
bool Gui_Page_Active=true;

extern image_t img_raw;
extern image_t img_thres;
extern image_t img_line;
extern float ahrs_kp;

void GUI_Motor(){
    ips114_showstr(10,0,"Encoder:");
    ips114_showint16(15,1,encoder1);
    ips114_showint16(15,2,RC_encoder2);
    ips114_showint16(15,3,RC_encoder3);
    ips114_showint16(15,4,RC_encoder4);

    ips114_showstr(100,0,"Mileage:");
    ips114_showint16(105,1,Car.MileageX);
    ips114_showint16(105,2,Car.MileageY);
    ips114_showstr(100,4,"Distance:");
    ips114_showint16(105,5,Car.DistanceX);
    ips114_showint16(105,6,Car.DistanceY);
    ips114_showstr(100,8,"Speed:");
    ips114_showint16(105,9,Car.Speed_Z);

    ips114_showstr(190,0,"NP:");
    ips114_showint8(220,0,Car.Position_Pointer);
}

void GUI_icm20602(){
    ips114_showstr(10,5,"Angel:");
    ips114_showfloat(15,6,Car.Angel,3,4);
    ips114_showstr(10,8,"An_Tar:");
    ips114_showint16(15,9,Car.Angel_Target);
}


void GUI_TargetPoint(){
    ips114_drawRectangle(55, 11, 265, 161,GREEN);
/*    for(int i=0;i<=locate_sz;i++){
        ips114_drawCircle(55+Car_Location[i][0]*6,161-Car_Location[i][1]*6,1,WHITE);
        //ips114_drawline(55+Car_Location_Route[i][0]*6,161-Car_Location_Route[i][1]*6,240+Car_Location_Route[i+1][0]*6,80-Car_Location_Route[i+1][1]*6,WHITE);
    }*/
    //ips114_drawpoint(Car.x,Car.y,RED);
}


void display_page(){
    if(Gui_Page_Active){
        ips114_clear(BLACK);
        Gui_Page_Active=false;
    }
    switch(Page_Number){
        case InfoPage:
            GUI_icm20602();
            GUI_Motor();
            break;
        case ConfigPage:
            ips114_showstr(10,0,"Config:");
            break;
        case TargetPointPage:
            ips114_showstr(10,0,"Route");
            GUI_TargetPoint();
            break;
        case CameraPage:
            ips114_showstr(10,0,"Camera:");

            ips114_displayimage032_zoom1(mt9v03x_csi_image[0], MT9V03X_CSI_W, MT9V03X_CSI_H, 66, 26, MT9V03X_CSI_W, MT9V03X_CSI_H);
            //ips114_showfloat(80,0,thres,3,2);
            //mt9v03x_csi_finish_flag = 0;	//清除采集完成标志位
            //ImageHandel();
            //ips114_displayimage032_zoom1(img_thres.data, MT9V03X_CSI_W, MT9V03X_CSI_H, 66, 26, MT9V03X_CSI_W, MT9V03X_CSI_H);
            //ips114_displayimage032_zoom(img_thres.data, MT9V03X_CSI_W, MT9V03X_CSI_H, 240, 135);	//显示摄像头图像
            //ips114_displayimage032_zoom(img_raw.data, MT9V03X_CSI_W, MT9V03X_CSI_H, 240, 135);	//显示摄像头图像
            ips114_drawline(66+Xt,26+Yl,66+Xt,26+Yl,BLUE);
            ips114_drawline(66+Xt,26+Yr,66+Xb,26+Yr,BLUE);
            ips114_drawline(66+Xb,26+Yr,66+Xb,26+Yl,BLUE);
            ips114_drawline(66+Xb,26+Yl,66+Xt,26+Yl,BLUE);
            rt_thread_delay(1);

            break;
        case AboutPage:
            ips114_showstr(10,0,"About:");
            break;
    }
}


void display_entry(void *parameter)
{
    //角度环测试
/*	ips114_clear(BLACK);
    rt_thread_delay(5000);
    Car.Angel_Target=10;
    rt_thread_delay(1000);
    Car.Angel_Target=100;
    rt_thread_delay(1500);
    Car.Angel_Target=-179;
    rt_thread_delay(1500);
    Car.Angel_Target=170;
    rt_thread_delay(1500);
    Car.Angel_Target=0;
    rt_thread_delay(1500);
    Car.Angel_Target=-179;
    rt_thread_delay(1500);
    Car.Angel_Target=0;
    rt_thread_delay(1500);
    Car.Angel_Target=90;
    rt_thread_delay(1500);
    Car.Angel_Target=-90;
    rt_thread_delay(1500);
    Car.Angel_Target=180;
    rt_thread_delay(1500);
    Car.Angel_Target=0;*/
    while(1){
        display_page();
        //ips114_showstr(10,0,"camera");
        //ips114_displayimage032_zoom1(mt9v03x_csi_image[0], MT9V03X_CSI_W, MT9V03X_CSI_H, 66, 26, MT9V03X_CSI_W, MT9V03X_CSI_H);
    }


}




void display_init(void)
{
    rt_thread_t tid;
    
    //初始化屏幕
    ips114_init();
    
    //创建显示线程 优先级设置为31
    tid = rt_thread_create("display", display_entry, RT_NULL, 1024, 31, 16);
    
    //启动显示线程
    if(RT_NULL != tid)
    {
        rt_thread_startup(tid);
    }
}